Shader "Unlit/#NAME#"
{
	Properties
	{
		_MainTex("Texture", 2D) = "white" {}
		_RimColor("Rim High Colour", Color) = (1,1,1,1)
		_RimLowColor("Rim Low Colour", Color) = (1,1,1,1)
		_RimWidth("Rim Width", Range(0.0, 3.0)) = 0.7
	}
	SubShader
	{
		Tags { "RenderType"="Opaque" }
		LOD 100

		Pass
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag
			
			#include "UnityCG.cginc"

			struct appdata
			{
				float4 vertex : POSITION;
				float3 viewDir : TEXCOORD0;
				float3 normal : NORMAL;
				float4 color : COLOR;
				float2 uv : TEXCOORD1;
			};

			struct v2f
			{
				float4 vertex : SV_POSITION;
				float3 color : TEXCOORD0;
				float2 uv : TEXCOORD1;
			};

			fixed4 _RimColor;
			fixed4 _RimLowColor;
			float _RimWidth;
			sampler2D _MainTex;
			float4 _MainTex_ST;
			
			v2f vert (appdata v)
			{
				v2f o;
				o.vertex = UnityObjectToClipPos(v.vertex);
				float3 viewDir = normalize(ObjSpaceViewDir(v.vertex));
				float dotProduct = 1 - dot(v.normal, viewDir);
				o.color = smoothstep(1 - _RimWidth, 1.0, dotProduct);
				float3 worldNormal = mul(unity_ObjectToWorld, float4(v.normal, 0)).xyz;
				o.color.g = worldNormal.y*0.5+0.5;
				o.color.b = v.color.r;
				o.uv = TRANSFORM_TEX(v.uv, _MainTex);
				return o;
			}
			
			fixed4 frag (v2f i) : SV_Target
			{
				fixed4 mainCol = tex2D(_MainTex, i.uv);
				float val = i.color.r;
				fixed4 topCol =  mainCol * (1 - i.color.b) + _RimColor * i.color.b;
				fixed4 rimCol = topCol *i.color.g + _RimLowColor * (1 - i.color.g);
				fixed4 col = mainCol *(1-val) + (val)*rimCol;
				return col;
			}
			ENDCG
		}
	}
	FallBack "Mobile/VertexLit"
}
