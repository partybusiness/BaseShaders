Shader "Unlit/#NAME#" {
		Properties{
			_Parallax("Height", Range(-0.8, 0.8)) = 0.1
			_MainTex("Base (RGB)", 2D) = "white" {}
		}
		SubShader
		{
			Pass{
			Lighting Off
			CGPROGRAM
				#pragma vertex vert
				#pragma fragment frag
				#include "UnityCG.cginc"

				struct v2f {
					float4 pos : SV_POSITION;
					float2 uv : TEXCOORD0;
				};

				struct vinput {
					float4 vertex : POSITION;
					float3 normal : NORMAL;
					float4 uv : TEXCOORD0;
					float4 tangent: TANGENT;
				};

				sampler2D _MainTex;
				float4 _MainTex_ST;
				uniform float _Parallax;

				v2f vert(vinput v)
				{
					//https://en.wikibooks.org/wiki/Cg_Programming/Unity/Projection_of_Bumpy_Surfaces
					v2f o;
					o.pos = UnityObjectToClipPos(v.vertex);
					o.uv = TRANSFORM_TEX(v.uv, _MainTex);

					float3 binormal = cross(v.normal, v.tangent.xyz)
						* v.tangent.w;
					// appropriately scaled tangent and binormal 
					// to map distances from object space to texture space

					float3 viewDirInObjectCoords = mul(
						unity_WorldToObject, float4(_WorldSpaceCameraPos, 1.0)).xyz
						- v.vertex.xyz;
					float3x3 localSurface2ScaledObjectT =
						float3x3(v.tangent.xyz, binormal, v.normal);
					// vectors are orthogonal
					float3 viewDirT =
						mul(localSurface2ScaledObjectT, viewDirInObjectCoords);

					float2 offset = ParallaxOffset(-1, _Parallax, viewDirT);
					o.uv += offset;

					return o;
				}

				float4 frag(v2f i) : COLOR
				{			
					half4 texcol = tex2D(_MainTex,i.uv);					
					return texcol;
				}
			ENDCG
			}
		}

	FallBack "Unlit/Texture"
}