Shader "Unlit/#NAME#"
{
	Properties{
		_MainTex("", 2D) = "white" {}
		_Density("Fog Density", float) = 0.5
	}

		SubShader{
		Tags{
			"RenderType" = "Transparent"
			"IgnoreProjector" = "True"
			"Queue" = "Transparent"
		}

		Blend SrcAlpha OneMinusSrcAlpha
		Cull Back
		Lighting Off
		ZWrite Off

		Pass{
		CGPROGRAM
		#pragma vertex vert
		#pragma fragment frag
		#include "UnityCG.cginc"

		sampler2D _MainTex;
		float4 _MainTex_ST;
		sampler2D_float _CameraDepthTexture;
		float _Density;

		struct appdata {
			float4 vertex : POSITION;
			float2 uv : TEXCOORD0;
		};
		struct v2f {
			float4 pos : SV_POSITION;
			float2 uv : TEXCOORD0;
			float4 scrPos: TEXCOORD1;
		};

		v2f vert(appdata v) {
			v2f o;
			o.pos = UnityObjectToClipPos(v.vertex);
			o.scrPos = ComputeScreenPos(o.pos);
			o.uv = TRANSFORM_TEX(v.uv, _MainTex);
			COMPUTE_EYEDEPTH(o.scrPos.z);
			return o;
		}
		

		half4 frag(v2f i) : COLOR{
		
			float sceneDepth = LinearEyeDepth(SAMPLE_DEPTH_TEXTURE_PROJ(_CameraDepthTexture, UNITY_PROJ_COORD(i.scrPos)));
			float projZ = i.scrPos.z;
			half4 fade = saturate(_Density * (sceneDepth - projZ));		
			half4 color = tex2D(_MainTex, i.uv);
			color.a *= fade;
			return color;
		}
			ENDCG
		}
	}
		FallBack "Unlit/Transparent"
}